
public class RatInMaze {
	
	boolean solveMaze(int maze[][])
	{
		int sol[][] = { {0,0,0,0},
				    	{0,0,0,0},
				    	{0,0,0,0},
				    	{0,0,0,0}
					  };
		
		if(solveMazeUtil(maze, 0, 0, sol) == false)
			return false;
		
		printSoln(sol);
		return true;
	}
	
	
	boolean solveMazeUtil(int[][] maze, int x, int y, int[][] sol)
	{
		int n = maze.length;
		
		if(x == n-1 && y == n-1)
		{
			sol[x][y] = 1;
			return true;
		}
		
		if(isSafe(maze, x, y) == true)
		{
			sol[x][y] = 1;
			
			//Go right
			if(solveMazeUtil(maze, x + 1, y, sol))
				return true;
			
			//Go down
			if(solveMazeUtil(maze, x, y + 1, sol))
				return true;
			
			sol[x][y] = 0;
			return false;
		}
		
		return false;
		
	}
	
	
	boolean isSafe(int[][] maze, int x, int y)
	{
		if(x >= 0 && x < maze.length && y >= 0 && y < maze.length && maze[x][y] == 1)
			return true;
		
		return false;
	}
	
	
	void printSoln(int[][] sol)
	{
		for (int i = 0; i < sol.length; i++)
        {
            for (int j = 0; j < sol.length; j++)
                System.out.print(" " + sol[i][j] +
                                 " ");
            System.out.println();
        }
	}
	
	
	public static void main(String args[])
    {
        RatInMaze rat = new RatInMaze();
        int maze[][] = {{1, 0, 0, 0},
            {1, 1, 0, 1},
            {0, 1, 0, 0},
            {1, 1, 1, 1}
        };
        rat.solveMaze(maze);
    }

}
